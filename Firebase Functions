# Firebase Functions Setup for Email Notifications

## Prerequisites
1. Firebase CLI installed (`npm install -g firebase-tools`)
2. Firebase project with Blaze (pay-as-you-go) plan enabled
3. Gmail account for sending emails (or other SMTP service)

## Setup Steps

### 1. Initialize Firebase Functions
```bash
cd CIFAMobileApp
firebase init functions
```
- Choose JavaScript
- Install dependencies when prompted

### 2. Install Required Packages
```bash
cd functions
npm install nodemailer
```

### 3. Set Environment Variables
```bash
firebase functions:config:set email.user="your-email@gmail.com"
firebase functions:config:set email.pass="your-app-password"
```

**Note**: For Gmail, you need to:
1. Enable 2-factor authentication
2. Generate an app-specific password
3. Use that password instead of your regular Gmail password

### 4. Deploy Functions
```bash
firebase deploy --only functions
```

## Alternative: Using Firebase Extensions

Firebase offers an official extension for sending emails:

1. Go to Firebase Console > Extensions
2. Search for "Trigger Email"
3. Install and configure with your SMTP settings
4. The extension will automatically send emails based on documents added to a specified collection

## Email Service Alternatives

Instead of Gmail, consider using:
- **SendGrid**: Better for production, 100 emails/day free
- **Mailgun**: 5,000 emails/month free
- **Amazon SES**: Very cost-effective for high volume

## Testing Email Functionality

1. Create a test user in your app
2. Check Firebase Functions logs:
```bash
firebase functions:log
```

3. Verify email delivery in the recipient's inbox

## Production Considerations

1. **Email Templates**: Store HTML templates in Firebase Storage for easier updates
2. **Rate Limiting**: Implement rate limiting to prevent spam
3. **Unsubscribe Links**: Include unsubscribe options in emails
4. **Email Logs**: Store email send logs in Firestore for debugging
5. **Error Handling**: Implement retry logic for failed email sends